---
# tasks file for jenkins
  
  - name: create jenkins namespace
    command:  kubectl apply -f -
    args:
        stdin: "{{ lookup('template', 'namespace.yaml.j2') }}"


  - name: create the dynamic persistent volume
    command:  kubectl apply -f -
    args:
        stdin: "{{ lookup('template', '{{ item }}.yaml.j2') }}"
    loop:
      - storage-jenkins
      - pvc
  - name: create jenkins deployment
    command:  kubectl apply -f -
    args:
        stdin: "{{ lookup('template', 'deploy_jenkins.yaml.j2') }}"

  - name: create the services
    command:  kubectl apply -f -
    args:
        stdin: "{{ lookup('template', '{{ item }}.yaml.j2') }}"
    loop:
      - clusterip_jenkins
      - service_jenkins
  - name: create jenkins ingress
    command:  kubectl apply -f -
    args:
        stdin: "{{ lookup('template', 'ingress-jenkins.yaml.j2') }}"
  
  - name: wait pods
    command: kubectl wait --for=condition=Ready po --selector=app=jenkins -n {{ namespace }} 
    register: condition
  - name: printf
    debug:
     msg: "{{ condition.stdout.split('\n') }}" 
  
  
  - name: sleep for 30  seconds and continue with play
    wait_for:
     timeout: 30  
  - name: get the administration password
    shell: JENKINS=$(kubectl get pod -l app=jenkins -n {{ namespace }} -o jsonpath="{.items[0].metadata.name}") && kubectl exec -it "$JENKINS" -n {{ namespace }} -- cat /var/jenkins_home/secrets/initialAdminPassword
    register: command_result
    
  - debug: msg="{{ command_result.stdout }}"
  
  
